Inspecting 78 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCWCCW

Offenses:

Gemfile:1:1: C: Layout/EndOfLine: Carriage return character detected.
source "https://rubygems.org" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source "https://rubygems.org"
^
Gemfile:1:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
source "https://rubygems.org"
       ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:4:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ruby "3.1.2"
     ^^^^^^^
Gemfile:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
    ^^^^^^^
Gemfile:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rails", "~> 7.0.3"
             ^^^^^^^^^^
Gemfile:10:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "sprockets-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:13:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
    ^^^^
Gemfile:13:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "pg", "~> 1.1"
          ^^^^^^^^
Gemfile:16:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
    ^^^^^^
Gemfile:16:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma", "~> 5.0"
            ^^^^^^^^
Gemfile:19:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "importmap-rails"
    ^^^^^^^^^^^^^^^^^
Gemfile:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "turbo-rails"
    ^^^^^^^^^^^^^
Gemfile:25:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "stimulus-rails"
    ^^^^^^^^^^^^^^^^
Gemfile:28:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "jbuilder"
    ^^^^^^^^^^
Gemfile:40:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
    ^^^^^^^^^^^^^
Gemfile:40:34: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                 ^
Gemfile:40:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
gem "tzinfo-data", platforms: %i[ mingw mswin x64_mingw jruby ]
                                                             ^
Gemfile:45:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bootsnap", require: false
    ^^^^^^^^^^
Gemfile:55:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
      ^^^^^^^
Gemfile:55:30: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                             ^
Gemfile:55:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
                                                 ^
Gemfile:61:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "web-console"
      ^^^^^^^^^^^^^
Gemfile:77:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
Rakefile:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Add your own tasks in files placed in lib/tasks ending in .rake, ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
Rakefile:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/application"
                 ^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/appcats_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class AppcatsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AppcatsController.
class AppcatsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AppcatsController < ApplicationController
^
app/controllers/appcats_controller.rb:2:39: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_appcat, only: %i[ show edit update destroy ]
                                      ^
app/controllers/appcats_controller.rb:2:64: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_appcat, only: %i[ show edit update destroy ]
                                                               ^
app/controllers/appcats_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/appcats_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/appcats_controller.rb:28:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to appcat_url(@appcat), notice: "Appcat was successfully created." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:41:64: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to appcat_url(@appcat), notice: "Appcat was successfully updated." }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:55:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to appcats_url, notice: "Appcat was successfully destroyed." }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/appcats_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_appcat
^^^^
app/controllers/appcats_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_appcat ...
    ^^^^^^^^^^^^^^
app/controllers/appcats_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def appcat_params
^^^^
app/controllers/appcats_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def appcat_params ...
    ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationController < ActionController::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/applications_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationsController.
class ApplicationsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationsController < ApplicationController
^
app/controllers/applications_controller.rb:2:44: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_application, only: %i[ show edit update destroy ]
                                           ^
app/controllers/applications_controller.rb:2:69: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_application, only: %i[ show edit update destroy ]
                                                                    ^
app/controllers/applications_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/applications_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/applications_controller.rb:28:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to application_url(@application), notice: "Application was successfully created." }
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:41:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to application_url(@application), notice: "Application was successfully updated." }
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:55:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to applications_url, notice: "Application was successfully destroyed." }
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/applications_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_application
^^^^
app/controllers/applications_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_application ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/applications_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def application_params
^^^^
app/controllers/applications_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def application_params ...
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CategoriesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CategoriesController.
class CategoriesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CategoriesController < ApplicationController
^
app/controllers/categories_controller.rb:2:41: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_category, only: %i[ show edit update destroy ]
                                        ^
app/controllers/categories_controller.rb:2:66: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_category, only: %i[ show edit update destroy ]
                                                                 ^
app/controllers/categories_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/categories_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/categories_controller.rb:28:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to category_url(@category), notice: "Category was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:41:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to category_url(@category), notice: "Category was successfully updated." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:55:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to categories_url, notice: "Category was successfully destroyed." }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/categories_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_category
^^^^
app/controllers/categories_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_category ...
    ^^^^^^^^^^^^^^^^
app/controllers/categories_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def category_params
^^^^
app/controllers/categories_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def category_params ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ContactsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ContactsController.
class ContactsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ContactsController < ApplicationController
^
app/controllers/contacts_controller.rb:2:40: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_contact, only: %i[ show edit update destroy ]
                                       ^
app/controllers/contacts_controller.rb:2:65: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_contact, only: %i[ show edit update destroy ]
                                                                ^
app/controllers/contacts_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/contacts_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/contacts_controller.rb:28:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to contact_url(@contact), notice: "Contact was successfully created." }
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:41:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to contact_url(@contact), notice: "Contact was successfully updated." }
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:55:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to contacts_url, notice: "Contact was successfully destroyed." }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/contacts_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_contact
^^^^
app/controllers/contacts_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_contact ...
    ^^^^^^^^^^^^^^^
app/controllers/contacts_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def contact_params
^^^^
app/controllers/contacts_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def contact_params ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class OrganizationsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class OrganizationsController.
class OrganizationsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class OrganizationsController < ApplicationController
^
app/controllers/organizations_controller.rb:2:45: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_organization, only: %i[ show edit update destroy ]
                                            ^
app/controllers/organizations_controller.rb:2:70: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_organization, only: %i[ show edit update destroy ]
                                                                     ^
app/controllers/organizations_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/organizations_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/organizations_controller.rb:28:76: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to organization_url(@organization), notice: "Organization was successfully created." }
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:41:76: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to organization_url(@organization), notice: "Organization was successfully updated." }
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:55:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to organizations_url, notice: "Organization was successfully destroyed." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/organizations_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_organization
^^^^
app/controllers/organizations_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_organization ...
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/organizations_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def organization_params
^^^^
app/controllers/organizations_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def organization_params ...
    ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class UsersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                    ^
app/controllers/users_controller.rb:2:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/users_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/users_controller.rb:28:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(@user), notice: "User was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:41:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:55:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to users_url, notice: "User was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_user
^^^^
app/controllers/users_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_user ...
    ^^^^^^^^^^^^
app/controllers/users_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def user_params
^^^^
app/controllers/users_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def user_params ...
    ^^^^^^^^^^^^^^^
app/helpers/appcats_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module AppcatsHelper ...
^^^^^^^^^^^^^^^^^^^^
app/helpers/appcats_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module AppcatsHelper.
module AppcatsHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/appcats_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module AppcatsHelper
^
app/helpers/application_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/applications_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationsHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/applications_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationsHelper.
module ApplicationsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/applications_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationsHelper
^
app/helpers/categories_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module CategoriesHelper ...
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/categories_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module CategoriesHelper.
module CategoriesHelper
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/categories_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module CategoriesHelper
^
app/helpers/contacts_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ContactsHelper ...
^^^^^^^^^^^^^^^^^^^^^
app/helpers/contacts_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ContactsHelper.
module ContactsHelper
^^^^^^^^^^^^^^^^^^^^^
app/helpers/contacts_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ContactsHelper
^
app/helpers/organizations_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module OrganizationsHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/organizations_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module OrganizationsHelper.
module OrganizationsHelper
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/organizations_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module OrganizationsHelper
^
app/helpers/student_orgs_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module StudentOrgsHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/student_orgs_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module StudentOrgsHelper.
module StudentOrgsHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/student_orgs_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module StudentOrgsHelper
^
app/helpers/users_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module UsersHelper ...
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module UsersHelper.
module UsersHelper
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationJob < ActiveJob::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationMailer < ActionMailer::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationMailer.
class ApplicationMailer < ActionMailer::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/application_mailer.rb:2:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  default from: "from@example.com"
                ^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:3:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "mailer"
         ^^^^^^^^
app/models/appcat.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Appcat < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/appcat.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Appcat < ApplicationRecord
^
app/models/application.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Application < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Application < ApplicationRecord
^
app/models/application_record.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationRecord < ActiveRecord::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/category.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Category < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/category.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Category < ApplicationRecord
^
app/models/contact.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Contact < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/contact.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Contact < ApplicationRecord
^
app/models/organization.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Organization < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/organization.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Organization < ApplicationRecord
^
app/models/user.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class User < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
app/views/appcats/_appcat.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! appcat, :id, :appcatID, :categoryID, :applicationID, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/appcats/_appcat.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! appcat, :id, :appcatID, :categoryID, :applicationID, :created_at, :updated_at
^
app/views/appcats/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @appcats, partial: "appcats/appcat", as: :appcat ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/appcats/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @appcats, partial: "appcats/appcat", as: :appcat
^
app/views/appcats/index.json.jbuilder:1:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @appcats, partial: "appcats/appcat", as: :appcat
                               ^^^^^^^^^^^^^^^^
app/views/appcats/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "appcats/appcat", appcat: @appcat ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/appcats/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "appcats/appcat", appcat: @appcat
^
app/views/appcats/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "appcats/appcat", appcat: @appcat
              ^^^^^^^^^^^^^^^^
app/views/applications/_application.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! application, :id, :applicationID, :orgID, :name, :datebuilt, :githublink, :description, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/applications/_application.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! application, :id, :applicationID, :orgID, :name, :datebuilt, :githublink, :description, :created_at, :updated_at
^
app/views/applications/_application.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
json.extract! application, :id, :applicationID, :orgID, :name, :datebuilt, :githublink, :description, :created_at, :updated_at
                                                                                                                        ^^^^^^
app/views/applications/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @applications, partial: "applications/application", as: :application ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/applications/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @applications, partial: "applications/application", as: :application
^
app/views/applications/index.json.jbuilder:1:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @applications, partial: "applications/application", as: :application
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/applications/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "applications/application", application: @application ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/applications/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "applications/application", application: @application
^
app/views/applications/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "applications/application", application: @application
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/categories/_category.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! category, :id, :categoryID, :name, :description, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/categories/_category.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! category, :id, :categoryID, :name, :description, :created_at, :updated_at
^
app/views/categories/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @categories, partial: "categories/category", as: :category ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/categories/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @categories, partial: "categories/category", as: :category
^
app/views/categories/index.json.jbuilder:1:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @categories, partial: "categories/category", as: :category
                                  ^^^^^^^^^^^^^^^^^^^^^
app/views/categories/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "categories/category", category: @category ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/categories/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "categories/category", category: @category
^
app/views/categories/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "categories/category", category: @category
              ^^^^^^^^^^^^^^^^^^^^^
app/views/contacts/_contact.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! contact, :id, :personID, :orgID, :year, :name, :email, :officerposition, :description, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/contacts/_contact.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! contact, :id, :personID, :orgID, :year, :name, :email, :officerposition, :description, :created_at, :updated_at
^
app/views/contacts/_contact.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [125/120]
json.extract! contact, :id, :personID, :orgID, :year, :name, :email, :officerposition, :description, :created_at, :updated_at
                                                                                                                        ^^^^^
app/views/contacts/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @contacts, partial: "contacts/contact", as: :contact ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/contacts/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @contacts, partial: "contacts/contact", as: :contact
^
app/views/contacts/index.json.jbuilder:1:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @contacts, partial: "contacts/contact", as: :contact
                                ^^^^^^^^^^^^^^^^^^
app/views/contacts/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "contacts/contact", contact: @contact ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/contacts/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "contacts/contact", contact: @contact
^
app/views/contacts/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "contacts/contact", contact: @contact
              ^^^^^^^^^^^^^^^^^^
app/views/organizations/_organization.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! organization, :id, :orgID, :name, :description, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/_organization.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! organization, :id, :orgID, :name, :description, :created_at, :updated_at
^
app/views/organizations/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @organizations, partial: "organizations/organization", as: :organization ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @organizations, partial: "organizations/organization", as: :organization
^
app/views/organizations/index.json.jbuilder:1:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @organizations, partial: "organizations/organization", as: :organization
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "organizations/organization", organization: @organization ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/organizations/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "organizations/organization", organization: @organization
^
app/views/organizations/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "organizations/organization", organization: @organization
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! user, :id, :userID, :name, :username, :password, :isadmin, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! user, :id, :userID, :name, :username, :password, :isadmin, :created_at, :updated_at
^
app/views/users/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @users, partial: "users/user", as: :user ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @users, partial: "users/user", as: :user
^
app/views/users/index.json.jbuilder:1:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @users, partial: "users/user", as: :user
                             ^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "users/user", user: @user ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "users/user", user: @user
^
app/views/users/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "users/user", user: @user
              ^^^^^^^^^^^^
bin/bundle:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/bundle:11:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rubygems"
        ^^^^^^^^^^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:21:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLER_VERSION"]
        ^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:26:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                  ^^^^^^^^
bin/bundle:26:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                                                     ^^^
bin/bundle:30:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if update_index && update_index.succ == i && a =~ Gem::Version::ANCHORED_VERSION_PATTERN
      ^^
bin/bundle:33:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:34:25: C: [Correctable] Style/PerlBackrefs: Prefer Regexp.last_match(1) over $1.
      bundler_version = $1
                        ^^
bin/bundle:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gemfile = ENV["BUNDLE_GEMFILE"]
                  ^^^^^^^^^^^^^^^^
bin/bundle:44:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.expand_path("../Gemfile", __dir__)
                     ^^^^^^^^^^^^
bin/bundle:50:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      when "gems.rb" then gemfile.sub(/\.rb$/, gemfile)
           ^^^^^^^^^
bin/bundle:57:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless File.file?(lockfile)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:59:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:66:9: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
        bundler_requirement_for(lockfile_version)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:76:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return requirement unless Gem.rubygems_version < Gem::Version.new("2.7.0")
                                                                      ^^^^^^^
bin/bundle:78:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    requirement += ".a" if bundler_gem_version.prerelease?
                   ^^^^
bin/bundle:84:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLE_GEMFILE"] ||= gemfile
        ^^^^^^^^^^^^^^^^
bin/bundle:91:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      gem "bundler", bundler_requirement
          ^^^^^^^^^
bin/bundle:93:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if gem_error.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:95:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      require "bundler/version"
              ^^^^^^^^^^^^^^^^^
bin/bundle:97:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:97:12: C: [Correctable] Style/IfUnlessModifier: Modifier form of if makes the line too long.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
           ^^
bin/bundle:97:121: C: Layout/LineLength: Line is too long. [127/120]
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
                                                                                                                        ^^^^^^^
bin/bundle:98:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:112:1: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
if m.invoked_as_script?
^^
bin/bundle:113:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                    ^^^^^^^^^
bin/bundle:113:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                               ^^^^^^^^
bin/importmap:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/importmap:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/importmap:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/application"
                 ^^^^^^^^^^^^^^^^^^^^^^^
bin/importmap:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "importmap/commands"
        ^^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rails:2:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_PATH = File.expand_path("../config/application", __dir__)
                            ^^^^^^^^^^^^^^^^^^^^^^^
bin/rails:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rails:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/commands"
        ^^^^^^^^^^^^^^^^
bin/rake:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rake:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rake"
        ^^^^^^
bin/setup:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "fileutils"
        ^^^^^^^^^^^
bin/setup:5:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/setup:16:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  puts "== Installing dependencies =="
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/setup:17:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system! "gem install bundler --conservative"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/setup:18:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system("bundle check") || system!("bundle install")
         ^^^^^^^^^^^^^^
bin/setup:18:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system("bundle check") || system!("bundle install")
                                    ^^^^^^^^^^^^^^^^
bin/setup:26:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system! "bin/rails db:prepare"
          ^^^^^^^^^^^^^^^^^^^^^^
bin/setup:29:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system! "bin/rails log:clear tmp:clear"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/setup:32:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  system! "bin/rails restart"
          ^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is used by Rack-based servers to start the application. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require_relative "boot" ...
^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative "boot"
^
config/application.rb:1:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "boot"
                 ^^^^^^
config/application.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails"
        ^^^^^^^
config/application.rb:5:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_model/railtie"
        ^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_job/railtie"
        ^^^^^^^^^^^^^^^^^^^^
config/application.rb:7:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_record/railtie"
        ^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:8:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_storage/engine"
        ^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:9:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_controller/railtie"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_mailer/railtie"
        ^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:11:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_mailbox/engine"
        ^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_text/engine"
        ^^^^^^^^^^^^^^^^^^^^
config/application.rb:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_view/railtie"
        ^^^^^^^^^^^^^^^^^^^^^
config/application.rb:14:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "action_cable/engine"
        ^^^^^^^^^^^^^^^^^^^^^
config/application.rb:22:3: C: Style/Documentation: Missing top-level documentation comment for class WebScraper::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__)
^
config/boot.rb:1:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__)
    ^^^^^^^^^^^^^^^^
config/boot.rb:1:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__)
                                           ^^^^^^^^^^^^
config/boot.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup" # Set up gems listed in the Gemfile.
        ^^^^^^^^^^^^^^^
config/boot.rb:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bootsnap/setup" # Speed up boot time by caching expensive operations.
        ^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Load the Rails application. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environment.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "application"
                 ^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/development.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:22:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if Rails.root.join("tmp/caching-dev.txt").exist?
                     ^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:28:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "Cache-Control" => "public, max-age=#{2.days.to_i}"
      ^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/production.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:25:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.public_file_server.enabled = ENV["RAILS_SERVE_STATIC_FILES"].present?
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:56:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:85:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:86:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:17:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.eager_load = ENV["CI"].present?
                          ^^^^
config/environments/test.rb:22:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "Cache-Control" => "public, max-age=#{1.hour.to_i}"
    ^^^^^^^^^^^^^^^
config/importmap.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Pin npm packages by running ./bin/importmap ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Pin npm packages by running ./bin/importmap
^
config/importmap.rb:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "application", preload: true
    ^^^^^^^^^^^^^
config/importmap.rb:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/turbo-rails", to: "turbo.min.js", preload: true
    ^^^^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:4:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/turbo-rails", to: "turbo.min.js", preload: true
                                 ^^^^^^^^^^^^^^
config/importmap.rb:5:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/stimulus", to: "stimulus.min.js", preload: true
    ^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:5:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/stimulus", to: "stimulus.min.js", preload: true
                              ^^^^^^^^^^^^^^^^^
config/importmap.rb:6:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/stimulus-loading", to: "stimulus-loading.js", preload: true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:6:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin "@hotwired/stimulus-loading", to: "stimulus-loading.js", preload: true
                                      ^^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin_all_from "app/javascript/controllers", under: "controllers"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/importmap.rb:7:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pin_all_from "app/javascript/controllers", under: "controllers"
                                                  ^^^^^^^^^^^^^
config/initializers/assets.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:4:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rails.application.config.assets.version = "1.0"
                                          ^^^^^
config/initializers/content_security_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:6:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
Rails.application.config.filter_parameters += [ ...
                                              ^
config/initializers/inflections.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Define an application-wide HTTP permissions policy. For further ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/puma.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Puma can serve each request in a thread from an internal thread pool. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch("RAILS_MAX_THREADS", 5) instead of fetch("RAILS_MAX_THREADS") { 5 }.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:7:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:8:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:14:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                 ^^^^^^^^^^^
config/puma.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                              ^^^^^^^^^^^^^
config/puma.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                                                ^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch("PORT", 3000) instead of fetch("PORT") { 3000 }.
port ENV.fetch("PORT") { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
port ENV.fetch("PORT") { 3000 }
               ^^^^^^
config/puma.rb:22:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                      ^^^^^^^^^^^
config/puma.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                                     ^^^^^^^^^^^^^
config/puma.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                  ^^^^^^^^^
config/puma.rb:25:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                               ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
Rails.application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
db/migrate/20230220170712_create_organizations.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateOrganizations < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220170712_create_organizations.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateOrganizations.
class CreateOrganizations < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220170712_create_organizations.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateOrganizations < ActiveRecord::Migration[7.0]
^
db/migrate/20230220180345_create_contacts.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateContacts < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220180345_create_contacts.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateContacts.
class CreateContacts < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220180345_create_contacts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateContacts < ActiveRecord::Migration[7.0]
^
db/migrate/20230220182122_create_applications.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateApplications < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220182122_create_applications.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateApplications.
class CreateApplications < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220182122_create_applications.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateApplications < ActiveRecord::Migration[7.0]
^
db/migrate/20230220183701_create_appcats.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateAppcats < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220183701_create_appcats.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAppcats.
class CreateAppcats < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^
db/migrate/20230220183701_create_appcats.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAppcats < ActiveRecord::Migration[7.0]
^
db/migrate/20230220184046_create_categories.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateCategories < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220184046_create_categories.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateCategories.
class CreateCategories < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220184046_create_categories.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateCategories < ActiveRecord::Migration[7.0]
^
db/migrate/20230220184715_create_users.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateUsers < ActiveRecord::Migration[7.0] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20230220184715_create_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateUsers.
class CreateUsers < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^
db/migrate/20230220184715_create_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateUsers < ActiveRecord::Migration[7.0]
^
db/schema.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is auto-generated from the current state of the database. Instead ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [52/25]
ActiveRecord::Schema[7.0].define(version: 2023_02_20_184715) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:43: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema[7.0].define(version: 2023_02_20_184715) do
                                          ^^^^^^^^^^^^^^^^^
db/schema.rb:15:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:17:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "appcats", force: :cascade do |t|
               ^^^^^^^^^
db/schema.rb:18:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "appcatID"
              ^^^^^^^^^^
db/schema.rb:19:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "categoryID"
              ^^^^^^^^^^^^
db/schema.rb:20:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "applicationID"
              ^^^^^^^^^^^^^^^
db/schema.rb:21:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:22:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:25:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "applications", force: :cascade do |t|
               ^^^^^^^^^^^^^^
db/schema.rb:26:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "applicationID"
              ^^^^^^^^^^^^^^^
db/schema.rb:27:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "orgID"
              ^^^^^^^
db/schema.rb:28:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:29:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.date "datebuilt"
           ^^^^^^^^^^^
db/schema.rb:30:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "githublink"
             ^^^^^^^^^^^^
db/schema.rb:31:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:32:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:33:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:36:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "categories", force: :cascade do |t|
               ^^^^^^^^^^^^
db/schema.rb:37:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "categoryID"
              ^^^^^^^^^^^^
db/schema.rb:38:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:39:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:40:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:41:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:44:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "contacts", force: :cascade do |t|
               ^^^^^^^^^^
db/schema.rb:45:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "personID"
              ^^^^^^^^^^
db/schema.rb:46:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "orgID"
              ^^^^^^^
db/schema.rb:47:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.date "year"
           ^^^^^^
db/schema.rb:48:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:50:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "officerposition"
             ^^^^^^^^^^^^^^^^^
db/schema.rb:51:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:53:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:56:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "organizations", force: :cascade do |t|
               ^^^^^^^^^^^^^^^
db/schema.rb:57:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "orgID"
              ^^^^^^^
db/schema.rb:58:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:59:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:60:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:61:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:64:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: :cascade do |t|
               ^^^^^^^
db/schema.rb:65:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "userID"
              ^^^^^^^^
db/schema.rb:66:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name"
             ^^^^^^
db/schema.rb:67:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "username"
             ^^^^^^^^^^
db/schema.rb:68:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "password"
             ^^^^^^^^^^
db/schema.rb:69:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "isadmin"
              ^^^^^^^^^
db/schema.rb:70:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:71:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:73:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
db/seeds.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file should contain all the record creation needed to seed the database with its default values. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
db/seeds.rb:9:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Organization.create!([{ orgID: 1, name: "testing", description: "Hoping this works"}])
                                        ^^^^^^^^^
db/seeds.rb:9:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Organization.create!([{ orgID: 1, name: "testing", description: "Hoping this works"}])
                                                                ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:9:84: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
Organization.create!([{ orgID: 1, name: "testing", description: "Hoping this works"}])
                                                                                   ^
spec/feature/integration_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# location: spec/feature/feature_spec.rb ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/feature/feature_spec.rb
^
spec/feature/integration_spec.rb:4:1: C: Metrics/BlockLength: Block has too many lines. [68/25]
RSpec.describe 'Scraping from STUACT', type: :feature do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario 'Scrapes correct output for organization' do
^^^^
spec/feature/integration_spec.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape" 
                 ^^^^^^^^
spec/feature/integration_spec.rb:7:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        click_on "Scrape" 
                         ^
spec/feature/integration_spec.rb:13:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:14:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape" 
                 ^^^^^^^^
spec/feature/integration_spec.rb:14:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        click_on "Scrape" 
                         ^
spec/feature/integration_spec.rb:22:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:23:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape"
                 ^^^^^^^^
spec/feature/integration_spec.rb:28:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:29:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape" 
                 ^^^^^^^^
spec/feature/integration_spec.rb:29:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        click_on "Scrape" 
                         ^
spec/feature/integration_spec.rb:30:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Delete Results"
                 ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:36:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:37:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape" 
                 ^^^^^^^^
spec/feature/integration_spec.rb:37:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        click_on "Scrape" 
                         ^
spec/feature/integration_spec.rb:38:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Delete Results"
                 ^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:46:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:47:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape" 
                 ^^^^^^^^
spec/feature/integration_spec.rb:47:26: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        click_on "Scrape" 
                         ^
spec/feature/integration_spec.rb:55:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:56:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape"
                 ^^^^^^^^
spec/feature/integration_spec.rb:64:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit organizations_path
    ^^^^
spec/feature/integration_spec.rb:65:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape"
                 ^^^^^^^^
spec/feature/integration_spec.rb:73:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_organization_path
    ^^^^
spec/feature/integration_spec.rb:74:9: W: Lint/UselessAssignment: Useless assignment to variable - org.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
        ^^^
spec/feature/integration_spec.rb:74:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
                                  ^^^^^^^^^
spec/feature/integration_spec.rb:74:48: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
                                               ^^^^^^^^
spec/feature/integration_spec.rb:74:57: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
                                                        ^^^^^^^^^^^
spec/feature/integration_spec.rb:74:70: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
                                                                     ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:74:86: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org = Organization.create(:orgID => 1, :name => "A Battery", :description => "Unique description")
                                                                                     ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                 ^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                 ^^^^^^^^^
spec/feature/integration_spec.rb:75:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                              ^^^^^^^^
spec/feature/integration_spec.rb:75:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                       ^^^^^^^^
spec/feature/integration_spec.rb:75:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                 ^^^^^^^^
spec/feature/integration_spec.rb:75:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                          ^^^^^^^^^^
spec/feature/integration_spec.rb:75:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                      ^^^^^^^^^
spec/feature/integration_spec.rb:75:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:121: C: [Correctable] Layout/LineLength: Line is too long. [199/120]
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:130: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                     ^^^^^^^^^^^
spec/feature/integration_spec.rb:75:163: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                  ^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:75:179: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        contact = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:77:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        click_on "Scrape"
                 ^^^^^^^^
spec/feature/integration_spec.rb:79:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(contact.name).to eql "Chad Parker"
                                    ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:81:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/spec_helper.rb:49:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/unit/unit_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# location: spec/unit/unit_spec.rb ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/unit/unit_spec.rb
^
spec/unit/unit_spec.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it "is not valid if organization PK is not unique" do
^^^^
spec/unit/unit_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if organization PK is not unique" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:6:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:6:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:6:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:7:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 1, :name => "Student org B", :description => "Different here")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:7:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 1, :name => "Student org B", :description => "Different here")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:7:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org2 = Organization.create(:orgID => 1, :name => "Student org B", :description => "Different here")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:7:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 1, :name => "Student org B", :description => "Different here")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:7:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org2 = Organization.create(:orgID => 1, :name => "Student org B", :description => "Different here")
                                                                                          ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:12:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if organization name is not unique" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:13:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:13:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:13:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:13:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:13:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:13:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:14:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 2, :name => "Student org A", :description => "Different here")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:14:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 2, :name => "Student org A", :description => "Different here")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:14:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org2 = Organization.create(:orgID => 2, :name => "Student org A", :description => "Different here")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:14:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org2 = Organization.create(:orgID => 2, :name => "Student org A", :description => "Different here")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:14:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org2 = Organization.create(:orgID => 2, :name => "Student org A", :description => "Different here")
                                                                                          ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:21:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it "is not valid if application PK is not unique" do
^^^^
spec/unit/unit_spec.rb:21:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if application PK is not unique" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:22:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                  ^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                       ^^^^^^^^^
spec/unit/unit_spec.rb:22:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:22:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                             ^^^^^^^
spec/unit/unit_spec.rb:22:87: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                      ^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:101: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:22:111: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                              ^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:121: C: [Correctable] Layout/LineLength: Line is too long. [208/120]
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:126: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:172: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                                                                           ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:188: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => 1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                  ^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                       ^^^^^^^^^
spec/unit/unit_spec.rb:23:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:23:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                             ^^^^^^^
spec/unit/unit_spec.rb:23:87: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                      ^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:101: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:23:111: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                              ^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:121: C: [Correctable] Layout/LineLength: Line is too long. [204/120]
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:126: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:172: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                                                                           ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:23:188: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 2, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                                                                                           ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:28:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if orgID is not valid" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:29:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                  ^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                       ^^^^^^^^^
spec/unit/unit_spec.rb:29:70: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                     ^^^^^^^^
spec/unit/unit_spec.rb:29:79: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                              ^^^^^^^
spec/unit/unit_spec.rb:29:88: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                       ^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:102: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                     ^^^^^^^^
spec/unit/unit_spec.rb:29:112: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                               ^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:121: C: [Correctable] Layout/LineLength: Line is too long. [209/120]
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:127: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:173: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                                                                            ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:29:189: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app1 = Application.create(:applicationID => 1, :orgID => -1, :name => "App A", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899820", :description => "Unique description")
                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:35: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                  ^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                       ^^^^^^^^^
spec/unit/unit_spec.rb:30:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:30:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                             ^^^^^^^
spec/unit/unit_spec.rb:30:87: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                      ^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:101: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                    ^^^^^^^^
spec/unit/unit_spec.rb:30:111: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                              ^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:121: C: [Correctable] Layout/LineLength: Line is too long. [204/120]
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:126: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:172: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                                                                           ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:30:188: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        app2 = Application.create(:applicationID => 1, :orgID => 5, :name => "App B", :datebuilt => 20210621, :githublink => "https://gist.github.com/sseletskyy/5899821", :description => "Different here")
                                                                                                                                                                                           ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:37:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it "is not valid if contact PK is not unique" do
^^^^
spec/unit/unit_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if contact PK is not unique" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:38:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:38:9: W: Lint/UselessAssignment: Useless assignment to variable - org1.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
        ^^^^
spec/unit/unit_spec.rb:38:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:38:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:38:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:38:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:38:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                 ^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                 ^^^^^^^^^
spec/unit/unit_spec.rb:39:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                              ^^^^^^^^
spec/unit/unit_spec.rb:39:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                       ^^^^^^^^
spec/unit/unit_spec.rb:39:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                 ^^^^^^^^
spec/unit/unit_spec.rb:39:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                          ^^^^^^^^^^
spec/unit/unit_spec.rb:39:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                      ^^^^^^^^^
spec/unit/unit_spec.rb:39:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:121: C: [Correctable] Layout/LineLength: Line is too long. [199/120]
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:130: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                     ^^^^^^^^^^^
spec/unit/unit_spec.rb:39:163: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                  ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:39:179: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                 ^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                 ^^^^^^^^^
spec/unit/unit_spec.rb:40:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                              ^^^^^^^^
spec/unit/unit_spec.rb:40:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                       ^^^^^^^^
spec/unit/unit_spec.rb:40:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                 ^^^^^^^^
spec/unit/unit_spec.rb:40:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                          ^^^^^^^^^^
spec/unit/unit_spec.rb:40:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                      ^^^^^^^^^
spec/unit/unit_spec.rb:40:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:121: C: [Correctable] Layout/LineLength: Line is too long. [198/120]
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:135: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:155: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                          ^^^^^^^^^
spec/unit/unit_spec.rb:40:166: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                     ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:40:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                                     ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is valid if orgID is not unique" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:46:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
    ^^^^
spec/unit/unit_spec.rb:46:9: W: Lint/UselessAssignment: Useless assignment to variable - org1.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
        ^^^^
spec/unit/unit_spec.rb:46:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                   ^^^^^^^^^
spec/unit/unit_spec.rb:46:49: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                ^^^^^^^^
spec/unit/unit_spec.rb:46:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                         ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:46:75: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                          ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:46:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        org1 = Organization.create(:orgID => 1, :name => "Student org A", :description => "Unique description")
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                 ^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                 ^^^^^^^^^
spec/unit/unit_spec.rb:47:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                              ^^^^^^^^
spec/unit/unit_spec.rb:47:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                       ^^^^^^^^
spec/unit/unit_spec.rb:47:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                 ^^^^^^^^
spec/unit/unit_spec.rb:47:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                          ^^^^^^^^^^
spec/unit/unit_spec.rb:47:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                      ^^^^^^^^^
spec/unit/unit_spec.rb:47:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:121: C: [Correctable] Layout/LineLength: Line is too long. [199/120]
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:130: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                     ^^^^^^^^^^^
spec/unit/unit_spec.rb:47:163: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                  ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:47:179: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person A", :email => "john@tamu.edu", :officerposition => "President", :description => "Unique description")
                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                 ^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                 ^^^^^^^^^
spec/unit/unit_spec.rb:48:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                              ^^^^^^^^
spec/unit/unit_spec.rb:48:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                       ^^^^^^^^
spec/unit/unit_spec.rb:48:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                 ^^^^^^^^
spec/unit/unit_spec.rb:48:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                          ^^^^^^^^^^
spec/unit/unit_spec.rb:48:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                      ^^^^^^^^^
spec/unit/unit_spec.rb:48:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:121: C: [Correctable] Layout/LineLength: Line is too long. [198/120]
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:135: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:155: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                          ^^^^^^^^^
spec/unit/unit_spec.rb:48:166: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                     ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:48:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person2 = Contact.create(:personID => 2, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                                     ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:53:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "is not valid if no orgID is not valid" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
    ^^^^
spec/unit/unit_spec.rb:54:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                 ^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                 ^^^^^^^^^
spec/unit/unit_spec.rb:54:63: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                              ^^^^^^^^
spec/unit/unit_spec.rb:54:72: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                       ^^^^^^^^
spec/unit/unit_spec.rb:54:82: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                 ^^^^^^^^
spec/unit/unit_spec.rb:54:91: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                          ^^^^^^^^^^
spec/unit/unit_spec.rb:54:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                      ^^^^^^^^^
spec/unit/unit_spec.rb:54:113: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                ^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:121: C: [Correctable] Layout/LineLength: Line is too long. [198/120]
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:135: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:155: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                          ^^^^^^^^^
spec/unit/unit_spec.rb:54:166: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                     ^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:54:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        person1 = Contact.create(:personID => 1, :orgID => 1, :year => 20210621, :name => "Person B", :email => "johnsmith@tamu.edu", :officerposition => "Unknown", :description => "Different here")
                                                                                                                                                                                     ^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:57:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   

78 files inspected, 648 offenses detected, 538 offenses autocorrectable
